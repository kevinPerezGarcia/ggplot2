---
title: "ggplot2"
author: "Kevin Perez Garcia"
format: html
toc: TRUE
editor: visual
---

## Inicialización del proyecto

### Instalación y carga de paquetes

```{r}
paquetes <- c("here",
              "ggplot2",
              "reshape2")

lapply(paquetes, library, character.only = T)
```

### Configuración de rutas

```{r}
here_figures <- here("figures")
here_antibodies <- here("rawdata", "antibodies.txt")
```

# Gráfico de barras

-   Base de datos

```{r}
cabbage_exp <- data.frame(Cultivar=c(rep("c39", 3), rep("c52", 3)), 
                          Date=rep(c("d16", "d20", "d21"),2), 
                          Weight=c(3.18, 2.80, 2.74, 2.26, 3.11, 1.47), 
                          sd= c(0.9566144, 0.2788867, 0.9834181, 0.4452215, 0.7908505, 0.2110819), 
                          n=rep(10,6), 
                          se=c(0.30250803, 0.08819171, 0.31098410, 0.14079141, 0.25008887, 0.06674995))
```

```{r}
str(cabbage_exp)
cabbage_exp
```

-   Gráfico

```{r}
ggplot(cabbage_exp, aes(Date, Weight)) +
  geom_bar(stat="identity")
```

-   Cambio de color de las barras

```{r}
ggplot(cabbage_exp, aes(Date, Weight)) +
  geom_bar(stat="identity", fill="plum")
```

-   Cambio de tema

```{r}
ggplot(cabbage_exp, aes(Date, Weight)) +
  geom_bar(stat="identity", fill="plum") +
  theme_bw()
```

::: callout-note
[Galeria de extensiones de ggplot2](https://exts.ggplot2.tidyverse.org/gallery/) presenta extensiones para implementar temas en los gráficos generados por la librería ggplot2.
:::

-   Gráfico de barras apiladas coloreadas por condición

```{r}
ggplot(cabbage_exp, aes(Date, Weight, fill=Cultivar)) +
  geom_bar(stat="identity") +
  theme_bw()
```

-   Añadir texto

```{r}
ggplot(cabbage_exp, aes(Date, Weight, fill=Cultivar)) +
  geom_bar(stat = "identity") +
  theme_bw() +
  geom_text(aes(label=Weight), vjust=0.4)
```

-   Gráfico con barras separadas por condición

```{r}
ggplot(cabbage_exp, aes(Date, Weight, fill=Cultivar)) +
  geom_bar(stat="identity", position = "dodge")
```

```{r}
ggplot(cabbage_exp, aes(Date, Weight, fill=Cultivar)) +
  geom_bar(stat="identity", position = "dodge") +
  geom_text(aes(label=Weight), vjust=-0.1, position = position_dodge(0.9), size=3, colour="red")
```

-   Cambio de paleta de colores

    -   R tiene paletas de colores ya preestablecidas (ver presentación).
    -   `library(RcolorBrewer` se dedica exclusivamente a las paletas de colores.

```{r}
ggplot(cabbage_exp, aes(Date, Weight, fill=Cultivar)) +
  geom_bar(stat="identity", position = "dodge") +
  scale_fill_brewer(palette = "Set1")
```

-   Añadir barras de error

```{r}
ggplot(data= cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + 
  geom_bar(stat="identity", position="dodge") +
  scale_fill_brewer(palette="Set1") +
  geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se), width=0.2, position=position_dodge(0.9))
```

-   Cambiar títulos de los ejes

```{r}
ggplot(data= cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + 
  geom_bar(stat="identity", position="dodge") +
  scale_fill_brewer(palette="Set1") +
  geom_errorbar(aes(ymin=Weight-se, ymax=Weight+se), width=0.2, position=position_dodge(0.9)) +
  labs(x="Day", y="Weight (lb)", fill="Experiment")
```

-   Quitar leyenda

```{r}
ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
  geom_bar(stat="identity", position="dodge", show.legend = F)
```

-   Añadir texto

```{r}
ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
  geom_bar(stat="identity", position="dodge", show.legend = F) +
  annotate("text", x=1.5, y=2, label="Texto")
```

-   Guardar un gráfico

```{r}
ggsave("figures/bar_graph.png", device = png)
```

# Gráfico de dispersión

Base de datos

```{r}
antibodies <- read.delim(here_antibodies, header=T)

str(antibodies)
```

-   Gráfico

```{r}
ggplot(antibodies, aes(x=CDR3.length, y=VJ.identity)) +
  geom_point()
```

-   Color por condición

```{r}
ggplot(antibodies, aes(x=CDR3.length, y=VJ.identity, colour=V.GENE)) +
  geom_point()
```

-   Forma por condición

```{r}
ggplot(antibodies, aes(CDR3.length, VJ.identity, shape=V.GENE)) +
  geom_point()
```

-   Forma y color por condición

```{r}
ggplot(antibodies, aes(CDR3.length, VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point()
```

-   Cambiar los valores de forma

R tiene un código de números y símbolos que pueden cambiar la forma de los objetos que graficamos.

![](images/image-1821593709.png)

```{r}
ggplot(antibodies, aes(CDR3.length, VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point() +
  scale_shape_manual(values=c(1,2,3))
```

-   Cambiar colores manualmente

    -   Con código HEX

    ```{r}
    ggplot(antibodies, aes(CDR3.length, VJ.identity, shape=V.GENE, colour=V.GENE)) +
      geom_point() +
      scale_shape_manual(values=c(1,2,3)) +
      scale_colour_manual(values=c("#24761A", "#9B79D9", "#2468E6"))
    ```

    -   Con nombre de color

    ```{r}
    ggplot(data= antibodies, aes(x= CDR3.length, y= VJ.identity, shape=V.GENE, colour=V.GENE)) +
    	geom_point() +
    	scale_shape_manual(values=c(1,2,3)) +
    	scale_colour_manual(values=c("deepskyblue", "seagreen2", "salmon"))
    ```

-   Cambiar tema

```{r}
ggplot(data= antibodies, aes(x= CDR3.length, y= VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point() +
  scale_shape_manual(values=c(15,16,17)) +
  scale_colour_manual(values=c("#24761A", "#9B79D9", "#2468E6")) +
  theme_bw()
```

-   Quitar leyenda

```{r}
ggplot(data= antibodies, aes(x= CDR3.length, y= VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point(show.legend=F) +
  scale_shape_manual(values=c(15,16,17)) +
  scale_colour_manual(values=c("#24761A", "#9B79D9", "#2468E6")) +
  theme_bw()
```

-   Agregar texto

```{r}
ggplot(data= antibodies, aes(x= CDR3.length, y= VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point(show.legend = F) +
  scale_shape_manual(values=c(15,16,17)) +
  scale_colour_manual(values=c("#24761A", "#9B79D9", "#2468E6")) +
  annotate("text", x=75, y=85, label="IGHV1-69", colour="#24761A") +
  annotate("text", x=35, y=88, label="IGHV2-5", colour="#9B79D9") +
  theme_bw()
```

-   Modificar ejes

```{r}
ggplot(data= antibodies, aes(x= CDR3.length, y= VJ.identity, shape=V.GENE, colour=V.GENE)) +
  geom_point(show.legend = FALSE) +
  scale_shape_manual(values=c(1,2,3)) +
  scale_colour_manual(values=c("#24761A", "#9B79D9", "#2468E6")) +
  annotate("text", x=75, y=85, label="IGHV1-69", colour="#24761A") +
  annotate("text", x=35, y=88, label="IGHV2-5", colour="#9B79D9") +
  annotate("text", x=60, y=82, label="IGHV3-73", colour="#2468E6") +
  labs(x="CDR3 length (bp)", y= "VJ identity (%)", colour="")+
  theme_bw()
```

# Histograma

Base de datos

```{r}
antibodies <- read.delim(here_antibodies, header=T)

str(antibodies)
```

-   Gráfico

```{r}
ggplot(antibodies, aes(VJ.identity)) +
  geom_histogram()
```

-   Ancho de barra

```{r}
ggplot(antibodies, aes(VJ.identity)) +
  geom_histogram(binwidth = 0.3)
```

-   Divide el rango x en 20 barras (bins)

```{r}
# Previamente
summary(antibodies$VJ.identity)

# Tamaño personalizado del bin
binsize <- diff(range(antibodies$VJ.identity))/20

# Gráfico
ggplot(antibodies, aes(VJ.identity)) +
  geom_histogram(binwidth = binsize)
```

-   Cambiando el color de los entornos de las barras

```{r}
ggplot(antibodies, aes(VJ.identity)) +
  geom_histogram(binwidth = binsize, colour="black")
```

-   Cambiando el color del relleno de las barras

```{r}
ggplot(antibodies, aes(VJ.identity)) +
  geom_histogram(binwidth = binsize, colour="black", fill="royalblue4")
```

-   Varios histogramas con diferentes colores de relleno

```{r}
ggplot(antibodies, aes(VJ.identity, fill=V.GENE)) +
  geom_histogram(binwidth = binsize)
```

-   Cambiando el valor de transparencia (alpha)

```{r}
ggplot(antibodies, aes(VJ.identity, fill=V.GENE)) +
  geom_histogram(binwidth = binsize, alpha=0.6)
```

-   Sin apilaciónd de barras intersectadas

```{r}
ggplot(antibodies, aes(VJ.identity, fill=V.GENE)) +
  geom_histogram(binwidth = binsize, alpha=0.6, position="identity")
```

-   En base a una función de densidad

```{r}
ggplot(antibodies, aes(VJ.identity, fill=V.GENE, y=..density..)) +
  geom_histogram(binwidth = binsize, alpha=0.6, position="identity")
```

-   Añadiendo una función de densidad

```{r}
ggplot(antibodies, aes(VJ.identity, fill=V.GENE, y=..density..)) +
  geom_histogram(binwidth = binsize, alpha=0.6, position="identity") +
  geom_density(alpha=0.4)
```

-   Cambiar la apariencia: por ejemplo, modificando la posición de la leyenda.

    ![](images/image-2105140507.png)

```{r}
ggplot(data= antibodies, aes(x= VJ.identity, fill=V.GENE, y= ..density..)) +
	geom_histogram(binwidth= binsize, position="identity", alpha=0.4, colour="gray") +	
	geom_density(alpha=0.4) + 
	scale_fill_manual(values=c("deepskyblue", "seagreen2", "salmon")) +
  labs(x="VJ identity (%)", y= "Density", fill="") +
	theme_bw() +
  theme(legend.position = "top")
```

# Diagrama de cajas

Base de datos

```{r}
antibodies <- read.delim(here_antibodies, header=T)

str(antibodies)
summary(antibodies$V.Nb.mutations)
```

-   Gráfico
```{r}
ggplot(antibodies, aes(y=V.Nb.mutations)) +
  geom_boxplot()
```
-   Con muescas (notch)
```{r}
ggplot(antibodies, aes(y=V.Nb.mutations)) +
  geom_boxplot(notch=T)
```
-   Cambiando de tema
```{r}
# Cambiar la apariencia
ggplot(data=antibodies, aes(y= V.Nb.mutations, x= V.GENE)) +
	geom_boxplot(notch= TRUE) +
	theme_bw()
```
-   Segmentado por alguna condición
```{r}
ggplot(data=antibodies, aes(y= V.Nb.mutations, fill=V.GENE)) +
	geom_boxplot()
```
-   Segmentado por alguna condición y añadiendo etiquetas en el eje horizontal
```{r}
ggplot(antibodies, aes(x=V.GENE, y=V.Nb.mutations, fill=V.GENE)) +
  geom_boxplot(notch=T) +
  theme_bw()
```
-   Cambiando colores
```{r}
ggplot(antibodies, aes(x=V.GENE, y=V.Nb.mutations, fill=V.GENE)) +
  geom_boxplot(notch=T) +
  scale_fill_manual(values=c("deepskyblue","seagreen2","salmon")) +
  theme_bw()
```
-   Cambiando las etiquetas de los ejes
```{r}
ggplot(antibodies, aes(x=V.GENE, y=V.Nb.mutations, fill=V.GENE)) +
  geom_boxplot(notch=T) +
  scale_fill_manual(values=c("deepskyblue","seagreen2","salmon")) +
  theme_bw() +
  labs(title="Gráfico de cajas", y="VH mutations (nt)", x="", fill="")
```
# Gráfico de violín
```{r}
ggplot(data=antibodies, aes(y= V.Nb.mutations, x= V.GENE,  fill=V.GENE)) +
	geom_violin() 
```
-   Con outliers
```{r}
ggplot(data=antibodies, aes(y= V.Nb.mutations, x= V.GENE,  fill=V.GENE)) +
	geom_violin(Trim=F)
```
-   Sin leyenda
```{r}
ggplot(data=antibodies, aes(y= V.Nb.mutations, x= V.GENE,  fill=V.GENE)) +
	geom_violin(show.legend = F, trim = F)
```
-   Añadir línea de tendencia con texto
Línea de la media de `V.Nb.mutations`
```{r}
v_media <- mean(antibodies$V.Nb.mutations)
```

```{r}
ggplot(antibodies, aes(y=V.Nb.mutations, x=V.GENE, fill=V.GENE)) +
  geom_violin(show.legend = F, trim=F) +
  geom_hline(yintercept = v_media, col="black", linetype="dashed") +
  annotate("text", x=0.7, y=30, label="Mean", colour="black")
```


